<html>
<%
  def boo = {}
  boo
  a.call()
%>
!{
def a = {}
def foo(int i) {return {}}
}!
<g:aaa times = " [a:5, b:{}]">
asasdasdas ${it}
</g:aaa>
</html>
-----
GspGroovyDummyHolder
  GspClass
    GspRunMethod
      GspRunBlock
        Outer: GSP TEMPLATE STATEMENTS('<html>\n')
        PsiElement(java scriptlet begin)('<%')
        PsiElement(new line)('\n  ')
        Variable definitions
          Modifiers
            PsiElement(def)('def')
          PsiWhiteSpace(' ')
          Variable
            PsiElement(identifier)('boo')
            PsiWhiteSpace(' ')
            PsiElement(=)('=')
            PsiWhiteSpace(' ')
            Closable block
              PsiElement({)('{')
              Parameter list
                <empty list>
              PsiElement(})('}')
        PsiElement(new line)('\n  ')
        Reference expression
          PsiElement(identifier)('boo')
        PsiElement(new line)('\n  ')
        Method call
          Reference expression
            Reference expression
              PsiElement(identifier)('a')
            PsiElement(.)('.')
            PsiElement(identifier)('call')
          Arguments
            PsiElement(()('(')
            PsiElement())(')')
        PsiElement(new line)('\n')
        PsiElement(java scriptlet end)('%>')
        Outer: GSP TEMPLATE STATEMENTS('\n')
        PsiElement(groovy declaration begin)('!{')
        Groovy class level declaration element
          PsiElement(new line)('\n')
          Variable definitions
            Modifiers
              PsiElement(def)('def')
            PsiWhiteSpace(' ')
            Field
              PsiElement(identifier)('a')
              PsiWhiteSpace(' ')
              PsiElement(=)('=')
              PsiWhiteSpace(' ')
              Closable block
                PsiElement({)('{')
                Parameter list
                  <empty list>
                PsiElement(})('}')
          PsiElement(new line)('\n')
          Method
            Modifiers
              PsiElement(def)('def')
            PsiWhiteSpace(' ')
            PsiElement(identifier)('foo')
            PsiElement(()('(')
            Parameter list
              Parameter
                Modifiers
                  <empty list>
                Built in type
                  PsiElement(int)('int')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('i')
            PsiElement())(')')
            PsiWhiteSpace(' ')
            Throw clause
              <empty list>
            Open block
              PsiElement({)('{')
              RETURN statement
                PsiElement(return)('return')
                PsiWhiteSpace(' ')
                Closable block
                  PsiElement({)('{')
                  Parameter list
                    <empty list>
                  PsiElement(})('}')
              PsiElement(})('}')
          PsiElement(new line)('\n')
        PsiElement(groovy declaration end)('}!')
        Outer: GSP TEMPLATE STATEMENTS('\n<g:aaa times = " ')
        Groovy Map Value
          Generalized list
            PsiElement([)('[')
            Named argument
              Argument label
                PsiElement(identifier)('a')
              PsiElement(:)(':')
              Literal
                PsiElement(Integer)('5')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            Named argument
              Argument label
                PsiElement(identifier)('b')
              PsiElement(:)(':')
              Closable block
                PsiElement({)('{')
                Parameter list
                  <empty list>
                PsiElement(})('}')
            PsiElement(])(']')
        Outer: GSP TEMPLATE STATEMENTS('">\nasasdasdas ')
        PsiElement(groovy expression begin)('${')
        Groovy Expression Injection
          Reference expression
            PsiElement(identifier)('it')
        PsiElement(groovy expression end)('}')
        Outer: GSP TEMPLATE STATEMENTS('\n</g:aaa>\n</html>')