<html>
<%
  def boo = {}
  boo
  a.call()
%>
!{
def a = {}
def foo(int i) {return {}}
}!
<g:aaa times = " [a:5, b:{}]">
asasdasdas ${it}
</g:aaa>
</html>
-----
Gsp Html File
  PsiElement(HTML_DOCUMENT)
    PsiElement(XML_PROLOG)
      <empty list>
    HtmlTag:html
      XmlToken:XML_START_TAG_START('<')
      XmlToken:XML_NAME('html')
      XmlToken:XML_TAG_END('>')
      XmlText
        PsiWhiteSpace('\n')
        Outer: GSP FRAGMENT('<%')
        Outer: GSP FRAGMENT('\n  def boo = {}\n  boo\n  a.call()\n')
        Outer: GSP FRAGMENT('%>')
        PsiWhiteSpace('\n')
        Outer: GSP FRAGMENT('!{')
        Outer: GSP FRAGMENT('\ndef a = {}\ndef foo(int i) {return {}}\n')
        Outer: GSP FRAGMENT('}!')
        PsiWhiteSpace('\n')
        Outer: GSP FRAGMENT('<')
        Outer: GSP FRAGMENT('g:aaa')
        Outer: GSP FRAGMENT(' ')
        Outer: GSP FRAGMENT('times')
        Outer: GSP FRAGMENT(' ')
        Outer: GSP FRAGMENT('=')
        Outer: GSP FRAGMENT(' ')
        Outer: GSP FRAGMENT('"')
        Outer: GSP FRAGMENT(' ')
        Outer: GSP FRAGMENT('[a:5, b:{}]')
        Outer: GSP FRAGMENT('"')
        Outer: GSP FRAGMENT('>')
        PsiWhiteSpace('\n')
        XmlToken:XML_DATA_CHARACTERS('asasdasdas')
        PsiWhiteSpace(' ')
        Outer: GSP FRAGMENT('${')
        Outer: GSP FRAGMENT('it')
        Outer: GSP FRAGMENT('}')
        PsiWhiteSpace('\n')
        Outer: GSP FRAGMENT('</')
        Outer: GSP FRAGMENT('g:aaa')
        Outer: GSP FRAGMENT('>')
        PsiWhiteSpace('\n')
      XmlToken:XML_END_TAG_START('</')
      XmlToken:XML_NAME('html')
      XmlToken:XML_TAG_END('>')