<!--
  ~ Copyright 2000-2007 JetBrains s.r.o.
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<!--
  This script is designed to be run as part of TeamCity build process. If you want to build plugin
    locally, use packagePlugin.xml
        -->

<project name="Generating the build of groovy language plugin" default="make.project">
  <property file="groovy.properties"/>
  <property environment="env"/>


  <property name="project.dir" location="${basedir}"/>
  <property name="src.dir" location="${project.dir}/src"/>
  <property name="production.dest" location="${project.dir}/classes/production"/>
  <property name="production.dest.groovy" location="${production.dest}/groovy"/>
  <property name="production.dest.groovy_rt" location="${production.dest}/groovy_rt"/>
  <property name="idea.dir" value="${project.dir}/lib/idea"/>
  <property name="idea.lib" location="${idea.dir}/lib"/>
  <property name="idea.plugins" location="${idea.dir}/plugins"/>
  <property name="groovy.lib" value="${project.dir}/GDK"/>
  <property name="test.dir" value="${project.dir}/test"/>
  <property name="test.dest" value="${project .dir}/classes/test/groovy"/>
  <property name="tools.jar.dir" value="${env.JAVA_HOME}/lib"/>
  <property name="resources.file" value="resources_en.jar"/>

  <property name="0" value="unknown"/>
  <property name="build.vcs.number.Groovy_open_svn" value="unknown"/>
  <property name="plugin.revision" value="${build.vcs.number.Groovy_open_svn}"/>
  <property name="plugin.version" value="${groovy.plugin.version}.${plugin.revision}"/>

  <property name="output" value="${basedir}/dist"/>

  <path id="idea.lib.path">
    <fileset dir="${idea.lib}">
      <include name="**/*.jar"/>
      <exclude name="boot.jar"/>
    </fileset>
    <fileset dir="${idea.plugins}">
      <include name="CSS/lib/*.jar"/>
      <include name="**/JavascriptLanguage.jar"/>
      <include name="**/JavaScriptLanguage/lib/resurces_en.jar"/>
    </fileset>
  </path>

  <path id="tools.path">
    <fileset dir="${tools.jar.dir}">
      <include name="**/*tools.jar"/>
    </fileset>
  </path>

  <path id="groovy.path">
    <fileset dir="${groovy.lib}">
      <include name="**/*.jar"/>
    </fileset>
  </path>

  <target name="unzip.last.successful.IDEA.build">
    <unzip dest="${idea.dir}">
      <fileset dir="${idea.pack}">
        <include name="*.zip"/>
      </fileset>
    </unzip>
  </target>


  <target name="clear.all" description="clears all files">
    <mkdir dir="${production.dest.groovy}"/>
    <delete includeemptydirs="true">
      <fileset dir="${production.dest.groovy}"/>
    </delete>
  </target>

  <target name="build.lexer" description="makes lexer file">
    <ant dir="${src.dir}/org/jetbrains/plugins/groovy/lang/lexer/" antfile="build.xml" target="generate.lexer"/>
    <ant dir="${src.dir}/org/jetbrains/plugins/grails/lang/gsp/lexer/core" antfile="build.xml" target="generate.lexer"/>
  </target>

  <property name="stubsOutput" value="${project.dir}/stubs"/>


  <path id="rtFiles">
    <pathelement path="${project.dir}/rt/src/"/>
  </path>

  <path id="rtFiles.output">
    <pathelement path="${production.dest.groovy_rt}"/>
  </path>

  <taskdef name="groovyc" classname="org.codehaus.groovy.ant.Groovyc" classpathref="groovy.path"/>

  <target name="make.rt" description="makes runtime classes" depends="build.lexer, unzip.last.successful.IDEA.build">
    <mkdir dir="${production.dest.groovy_rt}"/>

    <javac destdir="${production.dest.groovy_rt}" target="1.3" debug="on">
      <src refId="rtFiles"/>
      <classpath refid="groovy.path"/>
    </javac>
  </target>


  <target name="make.stubs">
    <taskdef name="generateStubs" classname="org.codehaus.groovy.ant.GenerateStubsTask" classpathref="groovy.path"/>

    <mkdir dir="${stubsOutput}"/>

    <generateStubs destdir="${stubsOutput}" srcDir="${src.dir}">
      <include name="**/*.groovy"/>
      <include name="**/*.java"/>
      <classpath>
        <!--<path refid="idea.lib.path"/>-->
        <path refid="groovy.path"/>
      </classpath>

      <configuration targetBytecode="1.5"/>
    </generateStubs>
  </target>

  <target name="make.project" description="makes project" depends="make.rt, make.stubs">
    <copy todir="${production.dest.groovy}/META-INF">
      <fileset dir="${src.dir}/META-INF"/>
    </copy>

    <copy todir="${production.dest.groovy}">
      <fileset dir="${project.dir}/resources"/>
    </copy>

    <copy todir="${production.dest.groovy}" flatten="false">
      <fileset dir="${src.dir}">
        <include name="**/*Bundle.properties"/>
      </fileset>
    </copy>

    <taskdef name="javac2" classname="com.intellij.ant.Javac2" classpathref="idea.lib.path"/>
    <path id="javaToCompile">
      <pathelement path="${src.dir}"/>
      <pathelement path="${stubsOutput}"/>
    </path>

    <javac2 destdir="${production.dest.groovy}" debug="on">
      <src refId="javaToCompile"/>

      <classpath refid="idea.lib.path"/>
      <classpath refid="groovy.path"/>
      <classpath refid="rtFiles.output"/>
    </javac2>

    <path id="output.path">
      <pathelement path="${production.dest.groovy}"/>
    </path>

    <!--<touch>
      <fileset dir=".">
        <include name="**/*.groovy"/>
      </fileset>
    </touch>-->

    <!--<groovyc destdir="${production.dest.groovy}" srcDir=".">
      <classpath>
        <path refid="idea.lib.path"/>
        <path refid="groovy.path"/>
        <path refid="output.path"/>
      </classpath>
    </groovyc>-->

    <replace file="${production.dest.groovy}/META-INF/plugin.xml" token="VERSION" value="${plugin.version}"/>

  </target>

  <target name="build.project" depends="clear.all, make.project" description="builds project"/>

  <target name="rebuild.all" depends="build.project, jar.groovy, zip.sources.groovy"
          description="builds and jar project and zip sources"/>

  <target name="jar.groovy" depends="make.project" description="makes groovy jar">
    <mkdir dir="${project.dir}/tempzip/Groovy/lib"/>

    <mkdir dir="${project.dir}/tempjar/lib/"/>

    <jar destfile="${project.dir}/tempzip/Groovy/lib/groovy_rt.jar">
      <fileset dir="${production.dest.groovy_rt}">
      </fileset>
    </jar>

    <jar destfile="${project.dir}/tempzip/Groovy/lib/Groovy.jar">
      <fileset dir="${production.dest.groovy}" excludes="**/*build.xml, **/groovy.properties">
      </fileset>

      <fileset dir="${project.dir}/tempjar">
      </fileset>

      <manifest>
        <attribute name="Revision" value="${plugin.revision}"/>
        <attribute name="Build" value="${plugin.version}"/>
      </manifest>
    </jar>

    <copy todir="${project.dir}/tempzip/Groovy/lib">
      <fileset dir="${groovy.lib}">
        <include name="groovy-all*.jar"/>
      </fileset>
    </copy>

    <zip destfile="${project.dir}/jetgroovy-bin-${plugin.version}.zip" basedir="${project.dir}/tempzip"/>

    <delete dir="${project.dir}/tempzip"/>
    <delete dir="${project.dir}/tempjar"/>
  </target>

  <target name="zip.sources.groovy" description="zips sources">
    <zip destfile="${project.dir}/jetgroovy-src-${plugin.version}.zip"
            basedir="${project.dir}"
            includes="src/**/*.java,
         src/**/*.properties,
         src/**/*.flex,
         src/**/*.jar,
         src/**/*.skeleton,
         src/**/*.xml,
         resources/**/*.*,
         META-INF/**/*.xml"
            excludes="src/**/*junit*"
            />
  </target>

  <target name="build tests" depends="make.project">

    <mkdir dir="${test.dest}"/>
    <mkdir dir="${test.dest}/groovy"/>

    <javac srcdir="${project.dir}/test"
            destdir="${test.dest}"
            debug="on">

      <classpath refid="idea.lib.path"/>
      <classpath refid="groovy.path"/>

      <classpath>
        <path location="${production.dest.groovy}"/>
      </classpath>

    </javac>

    <path id="output.path">
      <pathelement path="${production.dest.groovy}"/>
    </path>
    <path id="test.out">
      <pathelement path="${test.dest}"/>
    </path>

    <groovyc destdir="${project.dir}/test" srcDir="${project.dir}/test">
      <include name="**/Groovy*Test.groovy"/>
      <classpath>
        <path refid="idea.lib.path"/>
        <path refid="test.out"/>
        <path refid="groovy.path"/>
        <path refid="output.path"/>
      </classpath>
    </groovyc>
    <groovyc destdir="${test.dest}" srcDir="${project.dir}/test">
      <include name="**/Groovy*Test.groovy"/>
      <classpath>
        <path refid="idea.lib.path"/>
        <path refid="test.out"/>
        <path refid="groovy.path"/>
        <path refid="output.path"/>
      </classpath>
    </groovyc>


    <copy toDir="${idea.dir}/svnPlugins/groovy/testdata">
      <fileset dir="${project.dir}/testdata"/>
    </copy>
    <copy toDir="${idea.dir}/svnPlugins/groovy/test">
      <fileset dir="${project.dir}/test"/>
    </copy>

  </target>

  <target name="run.tests" description="runs all tests" depends="build tests">
    <mkdir dir="${project.dir}/logs"/>

    <echo message="${idea.lib}"/>

    <junit fork="yes"
            dir="${project.dir}"
            printsummary="yes"
            haltonerror="no"
            haltonfailure="no"
            description="runs junit tests">

      <classpath>
        <path location="${test.dest}"/>
        <path location="${test.dir}"/>
        <path location="${production.dest.groovy}"/>

        <path refid="idea.lib.path"/>
        <path refid="groovy.path"/>
        <path refid="tools.path"/>
      </classpath>

      <jvmarg value="-Xbootclasspath/a:${idea.lib}/boot.jar"/>
      <jvmarg value="-Djava.awt.headless=true"/>
      <jvmarg value="-Xmx256M"/>
      <jvmarg value="-ea"/>
      <jvmarg value="-Xdebug"/>
      <jvmarg value="-Djava.compiler=NONE"/>
      <jvmarg value="-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5006"/>

      <jvmarg value="-Didea.config.path=${output}/config"/>
      <jvmarg value="-Didea.system.path=${output}/system"/>
      <jvmarg value="-Didea.plugins.path=${production.dest}"/>

      <jvmarg value="-Didea.load.plugins.id=org.intellij.groovy"/>

      <formatter type="plain"/>

      <batchtest todir="${project.dir}/logs">
        <fileset dir="${test.dir}">
          <include name="**/*Test.java"/>
        </fileset>
        <fileset dir="${test.dir}">
          <include name="**/Groovy*Test.class"/>
        </fileset>
      </batchtest>
    </junit>

    <!--cleanup-->
    <delete dir="${project.dir}/test">
      <include name="**/Groovy*.class"/>
    </delete>

  </target>

</project>