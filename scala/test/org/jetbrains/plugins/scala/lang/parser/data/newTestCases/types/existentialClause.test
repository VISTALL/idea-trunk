class a {
  val x: Type forSome {type X; val y: Int}
}
-----
ScalaFile
  ScClass
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('a')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScValueDeclaration
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfIdentifiers
            Field identifier
              PsiElement(identifier)('x')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ExistentialType
            SimpleTypeElement
              CodeReferenceElement
                PsiElement(identifier)('Type')
            PsiWhiteSpace(' ')
            ExistentialClause
              PsiElement(forSome)('forSome')
              PsiWhiteSpace(' ')
              PsiElement({)('{')
              ScTypeAliasDeclaration
                PsiElement(type)('type')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('X')
              PsiElement(;)(';')
              PsiWhiteSpace(' ')
              ScValueDeclaration
                PsiElement(val)('val')
                PsiWhiteSpace(' ')
                ListOfIdentifiers
                  Field identifier
                    PsiElement(identifier)('y')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                SimpleTypeElement
                  CodeReferenceElement
                    PsiElement(identifier)('Int')
              PsiElement(})('}')
        PsiWhiteSpace('\n')
        PsiElement(})('}')