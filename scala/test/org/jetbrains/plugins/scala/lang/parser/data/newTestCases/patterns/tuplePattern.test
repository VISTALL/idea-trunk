class a {
  {
    case (a,b,c) => a
    case (a+c) => a
  }
}
-----
ScalaFile
  ScClass
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('a')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        BlockExpression
          PsiElement({)('{')
          PsiWhiteSpace('\n    ')
          CaseClauses
            CaseClause
              PsiElement(case)('case')
              PsiWhiteSpace(' ')
              TuplePattern
                PsiElement(()('(')
                ArgumentPatterns
                  ReferencePattern
                    PsiElement(identifier)('a')
                  PsiElement(,)(',')
                  ReferencePattern
                    PsiElement(identifier)('b')
                  PsiElement(,)(',')
                  ReferencePattern
                    PsiElement(identifier)('c')
                PsiElement())(')')
              PsiWhiteSpace(' ')
              PsiElement(=>)('=>')
              PsiWhiteSpace(' ')
              ReferenceExpression
                PsiElement(identifier)('a')
            PsiWhiteSpace('\n    ')
            CaseClause
              PsiElement(case)('case')
              PsiWhiteSpace(' ')
              PatternInParenthesis
                PsiElement(()('(')
                InfixPattern
                  InfixPattern
                    ReferencePattern
                      PsiElement(identifier)('a')
                    PsiElement(identifier)('+')
                    ReferencePattern
                      PsiElement(identifier)('c')
                PsiElement())(')')
              PsiWhiteSpace(' ')
              PsiElement(=>)('=>')
              PsiWhiteSpace(' ')
              ReferenceExpression
                PsiElement(identifier)('a')
          PsiWhiteSpace('\n  ')
          PsiElement(})('}')
        PsiWhiteSpace('\n')
        PsiElement(})('}')