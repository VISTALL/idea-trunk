class A{
 x match{
 case Alt(xs @ _) => traverse1(xs)
 case ELEMENTS( _ ) | MIXED( _ ) => c.toString(sb)
 }
}
-----
ScalaFile
  ScClass
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('A')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n ')
        MatchStatement
          ReferenceExpression
            PsiElement(identifier)('x')
          PsiWhiteSpace(' ')
          PsiElement(match)('match')
          PsiElement({)('{')
          PsiWhiteSpace('\n ')
          CaseClauses
            CaseClause
              PsiElement(case)('case')
              PsiWhiteSpace(' ')
              ConstructorPattern
                CodeReferenceElement
                  PsiElement(identifier)('Alt')
                Pattern Argument List
                  PsiElement(()('(')
                  NamingPattern
                    PsiElement(identifier)('xs')
                    PsiWhiteSpace(' ')
                    PsiElement(@)('@')
                    PsiWhiteSpace(' ')
                    WildcardPattern
                      PsiElement(_)('_')
                  PsiElement())(')')
              PsiWhiteSpace(' ')
              PsiElement(=>)('=>')
              PsiWhiteSpace(' ')
              MethodCall
                ReferenceExpression
                  PsiElement(identifier)('traverse1')
                ArgumentList
                  PsiElement(()('(')
                  ReferenceExpression
                    PsiElement(identifier)('xs')
                  PsiElement())(')')
            PsiWhiteSpace('\n ')
            CaseClause
              PsiElement(case)('case')
              PsiWhiteSpace(' ')
              CompositePattern
                ConstructorPattern
                  CodeReferenceElement
                    PsiElement(identifier)('ELEMENTS')
                  Pattern Argument List
                    PsiElement(()('(')
                    PsiWhiteSpace(' ')
                    WildcardPattern
                      PsiElement(_)('_')
                    PsiWhiteSpace(' ')
                    PsiElement())(')')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('|')
                PsiWhiteSpace(' ')
                ConstructorPattern
                  CodeReferenceElement
                    PsiElement(identifier)('MIXED')
                  Pattern Argument List
                    PsiElement(()('(')
                    PsiWhiteSpace(' ')
                    WildcardPattern
                      PsiElement(_)('_')
                    PsiWhiteSpace(' ')
                    PsiElement())(')')
              PsiWhiteSpace(' ')
              PsiElement(=>)('=>')
              PsiWhiteSpace(' ')
              MethodCall
                ReferenceExpression
                  ReferenceExpression
                    PsiElement(identifier)('c')
                  PsiElement(.)('.')
                  PsiElement(identifier)('toString')
                ArgumentList
                  PsiElement(()('(')
                  ReferenceExpression
                    PsiElement(identifier)('sb')
                  PsiElement())(')')
          PsiWhiteSpace('\n ')
          PsiElement(})('}')
        PsiWhiteSpace('\n')
        PsiElement(})('}')