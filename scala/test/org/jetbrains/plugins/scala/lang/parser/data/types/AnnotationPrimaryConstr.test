class A @Test() (val x: Int) {
  val y = x + 2
}
-------
ScalaFile
  ScClass
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('A')
    PsiWhiteSpace(' ')
    PrimaryConstructor
      AnnotationsList
        Annotation
          PsiElement(@)('@')
          AnnotationExpression
            Constructor
              SimpleTypeElement
                CodeReferenceElement
                  PsiElement(identifier)('Test')
              ArgumentList
                PsiElement(()('(')
                PsiElement())(')')
      PsiWhiteSpace(' ')
      Parameters
        ParametersClause
          PsiElement(()('(')
          ClassParameter
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(val)('val')
            PsiWhiteSpace(' ')
            PsiElement(identifier)('x')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            ParameterType
              SimpleTypeElement
                CodeReferenceElement
                  PsiElement(identifier)('Int')
          PsiElement())(')')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern
              PsiElement(identifier)('y')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          InfixExpression
            ReferenceExpression
              PsiElement(identifier)('x')
            PsiWhiteSpace(' ')
            ReferenceExpression
              PsiElement(identifier)('+')
            PsiWhiteSpace(' ')
            Literal
              PsiElement(integer)('2')
        PsiWhiteSpace('\n')
        PsiElement(})('}')