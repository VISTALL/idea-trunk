class a {
  {
    case <xml> {(a,b),_*} </xml> => 
  }
}
-----
ScalaFile
  ScClass
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('a')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        BlockExpression
          PsiElement({)('{')
          PsiWhiteSpace('\n    ')
          CaseClauses
            CaseClause
              PsiElement(case)('case')
              PsiWhiteSpace(' ')
              XmlPattern
                XmlStartTag
                  XmlToken:XML_START_TAG_START('<')
                  XmlToken:XML_NAME('xml')
                  XmlToken:XML_TAG_END('>')
                PsiWhiteSpace(' ')
                PsiElement(ScalaXmlInjectionStart)('{')
                ArgumentPatterns
                  TuplePattern
                    PsiElement(()('(')
                    ArgumentPatterns
                      ReferencePattern
                        PsiElement(identifier)('a')
                      PsiElement(,)(',')
                      ReferencePattern
                        PsiElement(identifier)('b')
                    PsiElement())(')')
                  PsiElement(,)(',')
                  Sequence Wildcard
                    PsiElement(_)('_')
                    PsiElement(identifier)('*')
                PsiElement(ScalaXmlInjection End)('}')
                PsiWhiteSpace(' ')
                XmlEndTag
                  XmlToken:XML_END_TAG_START('</')
                  XmlToken:XML_NAME('xml')
                  XmlToken:XML_TAG_END('>')
              PsiWhiteSpace(' ')
              PsiElement(=>)('=>')
          PsiWhiteSpace(' \n  ')
          PsiElement(})('}')
        PsiWhiteSpace('\n')
        PsiElement(})('}')